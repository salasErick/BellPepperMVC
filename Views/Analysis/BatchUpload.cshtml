@model BellPepperMVC.Controllers.BatchUploadViewModel
@{
    ViewData["Title"] = "Batch Upload";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h2 class="h4 mb-0">Batch Upload Bell Pepper Images</h2>
                </div>
                <div class="card-body">
                    <form asp-action="BatchUpload" asp-controller="Analysis" method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="Files" class="form-label">Select Multiple Images</label>
                            <input type="file" class="form-control" id="Files" name="Files" accept="image/*" multiple required>
                            <div class="form-text">You can select multiple images by holding Ctrl/Cmd while selecting.</div>
                            <span asp-validation-for="Files" class="text-danger"></span>
                        </div>

                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="RequestDetailedAnalysis" name="RequestDetailedAnalysis">
                            <label class="form-check-label" for="RequestDetailedAnalysis">Request Detailed Analysis</label>
                        </div>

                        <div class="mb-3">
                            <div id="selectedFiles" class="row g-3">
                                <!-- Selected files will be displayed here -->
                            </div>
                        </div>

                        <div class="alert alert-info">
                            <h5 class="alert-heading">Batch Processing Information</h5>
                            <ul class="mb-0">
                                <li>You can upload multiple images at once</li>
                                <li>Each image will be analyzed individually</li>
                                <li>Results will be available in your analysis history</li>
                                <li>Processing time depends on the number of images</li>
                            </ul>
                        </div>

                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <div asp-validation-summary="All" class="mb-0"></div>
                            </div>
                        }

                        <div class="text-end">
                            <a asp-action="Index" class="btn btn-secondary me-2">Cancel</a>
                            <button type="submit" class="btn btn-primary">Upload and Analyze All</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            $("#Files").change(function () {
                const selectedFiles = this.files;
                const selectedFilesContainer = $("#selectedFiles");
                selectedFilesContainer.empty();

                for (let i = 0; i < selectedFiles.length; i++) {
                    const file = selectedFiles[i];
                    const reader = new FileReader();

                    reader.onload = function (e) {
                        const col = $('<div class="col-md-4"></div>');
                        const card = $('<div class="card h-100"></div>');
                        const img = $('<img src="' + e.target.result + '" class="card-img-top" style="height: 150px; object-fit: cover;">');
                        const cardBody = $('<div class="card-body"></div>');
                        const fileName = $('<p class="card-text small text-truncate mb-0">' + file.name + '</p>');

                        cardBody.append(fileName);
                        card.append(img).append(cardBody);
                        col.append(card);
                        selectedFilesContainer.append(col);
                    }

                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
}